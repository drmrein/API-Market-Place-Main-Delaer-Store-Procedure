use WISE_STAGING
go
--=======================================================================================================================================
--||Author		: Juanda Nico Hasibuan
--||Create date	: 23-11-2021
--||Description	: Untuk insert data acq
--|| History	: 
--|| Version    : v1.0.20211123
--||-------------------------------------------------------------------------------------------------------------------------------------
--|| Date			| Type		| Version			| Name					|No Project				| Description												 
--||-------------------------------------------------------------------------------------------------------------------------------------- 
--|| 23-11-2021		| Create 	| v1.0.20211123		| Juanda Nico Hasibuan	|BR/2021/JUL/MKT/001    | API Marketplace & Main Dealer - Phase Main Dealer​
--======================================================================================================================================= 
 
CREATE PROCEDURE [dbo].[spMKT_MAINDEALER_INS_ACQUISITION_ORI](
@piSourceData VARCHAR(50),
@poRESP_CODE VARCHAR(30) OUTPUT,
@poRESP_DESC VARCHAR(100) OUTPUT,
@poRESP_TRANSACTION_ID VARCHAR(30) OUTPUT
)
AS
DECLARE
@PARTNER_ID VARCHAR(100),
@ORDER_ID VARCHAR(30),
@ORDER_DT VARCHAR(50), -- DATETIME,
@TRANSACTION_ID  VARCHAR(30), 
@FULL_NAME VARCHAR(100),
@ID_NO VARCHAR(50),
@BIRTH_PLACE VARCHAR(100),
@BIRTH_DT VARCHAR(50), -- DATETIME,   
@CITY VARCHAR(50),
@ADDR VARCHAR(200),  
@SURVEY_ADDR            VARCHAR(200),
@SURVEY_RT              VARCHAR(3),
@SURVEY_RW              VARCHAR(3),
@SURVEY_PROVINCE        VARCHAR(100),
@SURVEY_CITY            VARCHAR(100),
@SURVEY_SUB_DISTRICT    VARCHAR(100),
@SURVEY_VILLAGE         VARCHAR(100),
@SURVEY_CITY_ID         VARCHAR(100), 
@RT                     VARCHAR(3),
@RW                     VARCHAR(3),
@PROVINCE               VARCHAR(100), 
@SUB_DISTRICT           VARCHAR(100),
@VILLAGE                VARCHAR(100),
@CITY_ID                VARCHAR(100),
@PHONE_NUMBER           VARCHAR(100),
@MOTHER_MAIDEN_NAME     VARCHAR(100),
@COUNT INT=0,

@SOURCE_DATA VARCHAR(50),
@SOURCE_USER VARCHAR(200),
@RESP_CODE VARCHAR(20),
@RESP_DESC VARCHAR(100), 
@CURRENT_DATE DATETIME,
@ACQ_ID_SEQ INT, 
@ID_MARKETPLACE VARCHAR(20),
@SEQ_NEXT       BIGINT,
@DDMMYYYY       VARCHAR(8),
@STRINGvALUE VARCHAR(MAX),
@QUESTION_API VARCHAR(100),
@QUESTION_CODE VARCHAR(100),
@FLAG_MASTER INT,
@ParmDefinition NVARCHAR(MAX),
@SURVEY_SUB_ZIP_CODE VARCHAR(100),
@LEGAL_SUB_ZIP_CODE VARCHAR(100),
@SOA VARCHAR(50)='Walk In Dealer',
@ID_Status Varchar(100)='1',
@PRODUCT_TYPE_DESC VARCHAR(100)='Multiguna Barang Motor Konvensional',
@Debug VARCHAR(max)=''

DECLARE @SURVEY_PROVINCE_MAP     VARCHAR(100)
,@SURVEY_CITY_MAP         VARCHAR(100)
,@SURVEY_SUB_DISTRICT_MAP VARCHAR(100)
,@SURVEY_VILLAGE_MAP      VARCHAR(100)
,@SURVEY_CITY_ID_MAP      VARCHAR(100)
,@PROVINCE_MAP            VARCHAR(100)
,@CITY_MAP                VARCHAR(100)
,@SUB_DISTRICT_MAP        VARCHAR(100)
,@VILLAGE_MAP             VARCHAR(100)
,@CITY_ID_MAP             VARCHAR(100)

DECLARE @SELECT VARCHAR(MAX),@SELECTLISTX VARCHAR(MAX),@SELECTLIST VARCHAR(MAX),@listFinal VARCHAR(MAX),@listFinalX VARCHAR(MAX), @SQLSTR NVARCHAR(MAX)
 
IF OBJECT_ID('tempdb..##DataMasterCheckFromWise') IS NOT NULL DROP TABLE ##DataMasterCheckFromWise 

BEGIN TRY -- AWAL
  SET NOCOUNT ON
 
  INSERT INTO WISE_STAGING.DBO.LOG_JOB_MARKETPLACE (PROC_NAME, DATE_PROCESSED, ERR_MESSAGE, ERR_LINE, ERR_NUMBER)
  VALUES ('spMKT_MAINDEALER_INS_ACQUISITION_ORI', GETDATE(), 'START', NULL, NULL)
 
   
    /*POPULATE DATA & VARIABLE*/		
	BEGIN 
		 SELECT
			 @ORDER_ID               = ORDER_ID           
			,@PARTNER_ID             = PARTNER_ID         
			,@ID_NO                  = ID_NO              
			,@FULL_NAME              = FULL_NAME          
			,@BIRTH_PLACE            = BIRTH_PLACE        
			,@BIRTH_DT               = BIRTH_DT           
			,@SURVEY_ADDR            = SURVEY_ADDR        
			,@SURVEY_RT              = SURVEY_RT          
			,@SURVEY_RW              = SURVEY_RW          
			,@SURVEY_PROVINCE        = SURVEY_PROVINCE    
			,@SURVEY_CITY            = SURVEY_CITY        
			,@SURVEY_SUB_DISTRICT    = SURVEY_SUB_DISTRICT
			,@SURVEY_VILLAGE         = SURVEY_VILLAGE     
			,@SURVEY_CITY_ID         = SURVEY_CITY_ID     
			,@ADDR                   = ADDR               
			,@RT                     = RT                 
			,@RW                     = RW                 
			,@PROVINCE               = PROVINCE           
			,@CITY                   = CITY               
			,@SUB_DISTRICT           = SUB_DISTRICT       
			,@VILLAGE                = VILLAGE            
			,@CITY_ID                = CITY_ID            
			,@PHONE_NUMBER           = PHONE_NUMBER       
			,@MOTHER_MAIDEN_NAME     = MOTHER_MAIDEN_NAME 
			,@SOURCE_DATA            = @piSourceData
			,@SOURCE_USER            = ID_NAME
			,@RESP_CODE = '00'
			,@RESP_DESC = 'Success'
		FROM ##listRow5A0C6F48MainD 
	
 
		/*POPULATE DATA UNTUK DI VALIDASI*/
		SELECT gd.QUESTION_API,LI.ANSWER_TYPE,LI.LOV ,LI.IS_MANDATORY, LA.*
		INTO #DATA_VALIDASI
		from M_MKT_POLO_QUESTION_LIST LI
			JOIN  M_MKT_POLO_QUESTION_LABEL LA 
			ON LI.M_MKT_POLO_QUESTION_LABEL_id = LA.M_MKT_POLO_QUESTION_LABEL_id
			JOIN M_MKT_POLO_QUESTIONGROUP_D GD ON GD.QUESTION_IDENTIFIER=LI.QUESTION_IDENTIFIER
			JOIN M_MKT_POLO_QUESTIONGROUP_H GH ON GD.M_MKT_POLO_QUESTIONGROUP_H_ID=GH.M_MKT_POLO_QUESTIONGROUP_H_ID AND GH.QUESTIONGROUP_NAME=@SOURCE_USER
  
	
		/*POPULATE DATA MASTER WISE*/
		/*Script Validasi ditanam pada table*/
		SELECT LOV, QUESTION_CODE into #tempListMaster FROM  #DATA_VALIDASI WHERE ANSWER_TYPE='EXPRESSION'
		SELECT @selectList=''
		SELECT @selectList= @selectList +'('+ LOV +') as '+QUESTION_CODE+', ' FROM #tempListMaster  		 
		SELECT @listFinal = substring(@selectList,0, convert(int,len(@selectList)-0))
		

		SET @ParmDefinition ='@SURVEY_PROVINCE     VARCHAR(MAX)
							,@SURVEY_CITY         VARCHAR(MAX)
							,@SURVEY_SUB_DISTRICT VARCHAR(MAX)
							,@SURVEY_VILLAGE      VARCHAR(MAX)
							,@SURVEY_CITY_ID      VARCHAR(MAX)
							,@PROVINCE            VARCHAR(MAX)
							,@CITY                VARCHAR(MAX)
							,@SUB_DISTRICT        VARCHAR(MAX)
							,@VILLAGE             VARCHAR(MAX)
							,@CITY_ID             VARCHAR(MAX)'
		
		set @Debug='<Survey>'
		 
	 
		SET @sqlStr= ' SELECT '+@listFinal+' INTO ##DataMasterCheckFromWise ' 	 
		EXEC SP_EXECUTESQL @sqlStr 	
			,@ParmDefinition
			,@SURVEY_PROVINCE      =@SURVEY_PROVINCE    
			,@SURVEY_CITY          =@SURVEY_CITY        
			,@SURVEY_SUB_DISTRICT  =@SURVEY_SUB_DISTRICT
			,@SURVEY_VILLAGE       =@SURVEY_VILLAGE     
			,@SURVEY_CITY_ID       =@SURVEY_CITY_ID     
			,@PROVINCE             =@PROVINCE           
			,@CITY                 =@CITY               
			,@SUB_DISTRICT         =@SUB_DISTRICT       
			,@VILLAGE              =@VILLAGE            
			,@CITY_ID              =@CITY_ID   

	
	END

  -- DATA BY API
  IF @SOURCE_DATA = 'Main_Dealer'
     BEGIN	-- START IF API
			--#VALIDASI 

		/*MANDATORY*/
		IF @RESP_CODE = '00'
	    BEGIN
			DECLARE @IS_MANDATORY VARCHAR(100)=''
			SELECT DV.QUESTION_CODE,DV.QUESTION_API, DV.IS_MANDATORY 
			INTO #IS_MANDATORY
			from #DATA_VALIDASI DV
			WHERE DV.IS_MANDATORY=1

			SELECT TOP 1 @IS_MANDATORY=[NAME] 
			FROM #PARAM_FINAL 
			WHERE QUESTION_CODE IN (SELECT QUESTION_CODE FROM #IS_MANDATORY)
			AND LEN(ISNULL(NULLIF(stringvalue,'null'),''))=0

			IF LEN(ISNULL(NULLIF(@IS_MANDATORY,'null'),''))>0
			BEGIN 
				SELECT @RESP_CODE=RESPONSE_CODE, @RESP_DESC = REPLACE(RESPONSE_MESSAGE,'[Param_IN]',  @IS_MANDATORY )
				  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
				 WHERE RESPONSE_CODE = '12' --Error - [Param_IN] is mandatory
	            GOTO ERROR_VAL;
			END

	    END

		/*DUPLICATE ORDERID*/
		IF @RESP_CODE = '00'
		BEGIN
			DECLARE @ORDER_COUNT INT
			SELECT @ORDER_COUNT = COUNT(1)
			FROM WISE_STAGING.DBO.T_MKT_MARKETPLACE_ACQ WITH(NOLOCK)
			WHERE PARTNER_ID = @PARTNER_ID
			AND ORDER_ID   = @ORDER_ID
          
			IF @ORDER_COUNT > 0
			BEGIN 
				SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC = RESPONSE_MESSAGE
				  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
				 WHERE RESPONSE_CODE = '03' --Error - Duplicate orderIdDealer
				GOTO ERROR_VAL;
			END
		END
		 
		/*DEALER ID*/
		IF @RESP_CODE = '00'
		BEGIN
			DECLARE @ID_PARTNER_COUNT INT
			SELECT @ID_PARTNER_COUNT = COUNT(1)
			FROM WISE_STAGING.DBO.M_MKT_MARKETPLACE_PARTNER WITH(NOLOCK)
			WHERE ID_MARKETPLACE = @PARTNER_ID
			AND FLAG_MASTER_PARTNER='Main_Dealer'
		  
			IF @ID_PARTNER_COUNT = 0
			BEGIN
				SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC = RESPONSE_MESSAGE
				FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
				WHERE  RESPONSE_CODE = '08' --Error - dealerId unregister 
				GOTO ERROR_VAL;
			END
		END

		/*FORMAT KTP*/
		IF @RESP_CODE = '00'
		BEGIN 
			IF RTRIM(LTRIM(ISNULL(@ID_NO, ''))) = '' 
			OR RTRIM(LTRIM(@ID_NO)) like '%[a-zA-Z]%' 
			OR RTRIM(LTRIM(@ID_NO)) LIKE '%[`~!@#$%^&*()_+=-.?/:;"}{[]%' 
			OR RTRIM(LTRIM(@ID_NO)) LIKE '%.%' 
			OR RTRIM(LTRIM(@ID_NO)) LIKE '%,%' 
			OR RTRIM(LTRIM(@ID_NO)) LIKE '%''%' 
			OR ISNUMERIC(RTRIM(LTRIM(@ID_NO))) = 0  
			BEGIN
				SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC = RESPONSE_MESSAGE
				FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
				WHERE  RESPONSE_CODE = '13' --Error - Invalid format idNo 
				GOTO ERROR_VAL;
			END			
		END

		/*DATE*/
		IF @RESP_CODE = '00'
		BEGIN
			DECLARE @DATE_VALIDATE DATETIME
			SELECT DV.QUESTION_CODE, DV.QUESTION_API 
			INTO #IS_DATE
			from #DATA_VALIDASI DV
			WHERE LEN(ISNULL(DV.RESPONSE_DATE,''))>0

			DECLARE C1 CURSOR  
			FOR  
			SELECT IDT.QUESTION_CODE, IDT.QUESTION_API, PF.STRINGvALUE 
			FROM #IS_DATE IDT 
			JOIN #PARAM_FINAL PF ON IDT.QUESTION_CODE=PF.QUESTION_CODE			 

			OPEN C1  
  
			FETCH NEXT  
			FROM C1  
			INTO @QUESTION_CODE, @QUESTION_API , @STRINGvALUE 
			WHILE @@FETCH_STATUS = 0  
			BEGIN 
				BEGIN TRY
					SELECT @DATE_VALIDATE = CONVERT(DATE, @STRINGvALUE)
				END TRY

				BEGIN CATCH
					SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  REPLACE(RESPONSE_MESSAGE,'[Param_IN]',  @QUESTION_API )
					  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
					 WHERE RESPONSE_CODE = '11' --Error - [Param_IN] must be date format 
					GOTO ERROR_VAL;
				END CATCH

				FETCH NEXT  
				FROM C1  
				INTO @QUESTION_CODE, @QUESTION_API ,@STRINGvALUE
			END
			CLOSE C1    
			DEALLOCATE C1 			 
		END

		/*NUMERIC*/
		IF @RESP_CODE = '00'
		BEGIN
			DECLARE @NUMERIC_VALIDATE NUMERIC 
			SELECT DV.QUESTION_CODE, DV.QUESTION_API 
			INTO #IS_NUMERIC
			from #DATA_VALIDASI DV
			WHERE LEN(ISNULL(DV.RESPONSE_NUMERIC,''))>0

			DECLARE C1 CURSOR  
			FOR  
			SELECT IDT.QUESTION_CODE, IDT.QUESTION_API, PF.STRINGvALUE 
			FROM #IS_NUMERIC IDT 
			JOIN #PARAM_FINAL PF ON IDT.QUESTION_CODE=PF.QUESTION_CODE			 

			OPEN C1  
  
			FETCH NEXT  
			FROM C1  
			INTO @QUESTION_CODE, @QUESTION_API , @STRINGvALUE 
			WHILE @@FETCH_STATUS = 0  
			BEGIN 
				BEGIN TRY
					SELECT @NUMERIC_VALIDATE = CONVERT(NUMERIC, @STRINGvALUE)
				END TRY

				BEGIN CATCH
					SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  REPLACE(RESPONSE_MESSAGE,'[Param_IN]', @QUESTION_API )
					  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
					 WHERE RESPONSE_CODE = '09' --Error - [Param_IN] must be numeric 
					GOTO ERROR_VAL;
				END CATCH

				FETCH NEXT  
				FROM C1  
				INTO @QUESTION_CODE, @QUESTION_API ,@STRINGvALUE
			END
			CLOSE C1    
			DEALLOCATE C1 			 
		END
		
		/*LENGTH*/
		IF @RESP_CODE = '00'
		BEGIN
			DECLARE @LENGTH_VALIDATE INT 
			SELECT DV.QUESTION_CODE, DV.QUESTION_API , DV.MAX_LENGTH
			INTO #IS_MAXLENGTH
			from #DATA_VALIDASI DV
			WHERE LEN(ISNULL(DV.MAX_LENGTH,''))>0

			DECLARE C1 CURSOR  
			FOR  
			SELECT IDT.QUESTION_CODE, IDT.QUESTION_API, PF.STRINGvALUE ,idt.MAX_LENGTH
			FROM #IS_MAXLENGTH IDT 
			JOIN #PARAM_FINAL PF ON IDT.QUESTION_CODE=PF.QUESTION_CODE			 

			OPEN C1  
  
			FETCH NEXT  
			FROM C1  
			INTO @QUESTION_CODE, @QUESTION_API , @STRINGvALUE ,@LENGTH_VALIDATE
			WHILE @@FETCH_STATUS = 0  
			BEGIN 
				IF LEN(@STRINGvALUE)>@LENGTH_VALIDATE
				BEGIN
					SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  REPLACE(REPLACE(RESPONSE_MESSAGE,'[Param_IN]', @QUESTION_API ),'[n]', CAST(@LENGTH_VALIDATE as VARCHAR(100)) )
					  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
					 WHERE RESPONSE_CODE = '10' --Error - [Param_IN] must be [n] digits
					GOTO ERROR_VAL;
				END

				FETCH NEXT  
				FROM C1  
				INTO @QUESTION_CODE, @QUESTION_API ,@STRINGvALUE,@LENGTH_VALIDATE
			END
			CLOSE C1    
			DEALLOCATE C1 			 
		END
		
		--VALIDASI FLAG MASTER	
		SELECT @FLAG_MASTER   = FLAG_MASTER
		FROM WISE_STAGING.DBO.M_MKT_MARKETPLACE_PARTNER WITH(NOLOCK)
		WHERE ID_MARKETPLACE = @PARTNER_ID 
		
		/*FLAG MASTER = 1*/
		IF @FLAG_MASTER=1
		BEGIN 
			/*SURVEY*/
			BEGIN
				IF @RESP_CODE = '00'
				BEGIN  
					IF (select SURVEY_PROVINCE from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '14' --Error - surveyProvince does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END		
			
				IF @RESP_CODE = '00'
				BEGIN  
					IF (select SURVEY_CITY from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '15' --Error - surveyCity does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END		

				IF @RESP_CODE = '00'
				BEGIN  
					IF (select SURVEY_SUB_DISTRICT from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '16' --Error - surveySubDistrict does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END	

				IF @RESP_CODE = '00'
				BEGIN  
					IF (select SURVEY_VILLAGE from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '17' --Error - surveyVillage does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END	
			END
			
			/*LEGALL*/
			BEGIN
				IF @RESP_CODE = '00'
				BEGIN  
					IF (select SURVEY_CITY_ID from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '18' --Error - surveyZipcode does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END	

				IF @RESP_CODE = '00'
				BEGIN  
					IF (select PROVINCE from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '19' --Error - legalProvince does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END	

				IF @RESP_CODE = '00'
				BEGIN  
					IF (select CITY from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '20' --Error - legalCity does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END
			
				IF @RESP_CODE = '00'
				BEGIN  
					IF (select SUB_DISTRICT from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '21' --Error - legalSubDistrict does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END	

				IF @RESP_CODE = '00'
				BEGIN  
					IF (select VILLAGE from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '22' --Error - legalVilage does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END

				IF @RESP_CODE = '00'
				BEGIN  
					IF (select CITY_ID from ##DataMasterCheckFromWise) is null
					BEGIN
						SELECT @RESP_CODE=RESPONSE_CODE,@RESP_DESC =  RESPONSE_MESSAGE
						  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE WITH(NOLOCK)
						 WHERE RESPONSE_CODE = '23' --Error - legalZipcode does not exist in master WISE
						GOTO ERROR_VAL;
					END
				END
			END

		END 
	    
	   -- #End - Field Not Character

	 END 
  -- END IF API
  
  -- ERROR MESSAGE
  ERROR_VAL:
  

  IF @SOURCE_DATA = 'Main_Dealer'
     BEGIN
	   -- ID -> ACQ_ID
	   SET @ACQ_ID_SEQ = NEXT VALUE FOR WISE_STAGING.DBO.[MARKETPLACE_ACQ_SEQ]

	   -- Generate TRANSACTION_ID Jika Sukses
		IF @RESP_CODE = '00'
		BEGIN
			--SELECT @ID_MARKETPLACE = 'MD',
			--	   @SEQ_NEXT       = SEQ_NEXT
			--FROM WISE_STAGING.DBO.M_MKT_MARKETPLACE_PARTNER WITH(NOLOCK)
			--WHERE ID_MARKETPLACE  = @PARTNER_ID

			SET @SEQ_NEXT = (NEXT VALUE FOR dbo.MKT_MAINDEALER_SEQUENCE)
			SET @DDMMYYYY  = FORMAT(GETDATE(), 'ddMMyyyy') 
          
			SET @TRANSACTION_ID = 'MD'+CAST(WISE_STAGING.DBO.LPAD(@SEQ_NEXT, 7, '0')AS VARCHAR(MAX))
		END

	   SET @CURRENT_DATE = GETDATE()

	   SET @SURVEY_SUB_ZIP_CODE=(SELECT TOP 1 RZ.SUB_ZIPCODE
									FROM CONFINS.DBO.REF_ZIPCODE RZ WITH (NOLOCK)
									INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT RPD WITH (NOLOCK) ON RPD.REF_PROV_DISTRICT_ID = RZ.REF_PROV_DISTRICT_ID
									INNER JOIN (
										SELECT PRV.NAME AS PROV_NAME
											,kota.REF_PROV_DISTRICT_ID AS KOTA_ID
											,kota.NAME AS KOTA_NAME
										FROM CONFINS.DBO.REF_PROV_DISTRICT PRV WITH (NOLOCK)
										INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT KOTA WITH (NOLOCK) ON PRV.REF_PROV_DISTRICT_ID = KOTA.PARENT_ID
										WHERE PRV.TYPE = 'PRV'
											AND KOTA.TYPE = 'DIS'
											AND KOTA.IS_ACTIVE = '1'
											AND PRV.IS_ACTIVE = '1'
										) N ON N.KOTA_ID = RZ.REF_PROV_DISTRICT_ID
									WHERE RZ.KELURAHAN = @SURVEY_VILLAGE
										AND RZ.KECAMATAN = @SURVEY_SUB_DISTRICT
										AND RZ.CITY = @SURVEY_CITY
										AND RZ.ZIPCODE = @SURVEY_CITY_ID
										AND RZ.IS_ACTIVE = '1'
										AND RPD.IS_ACTIVE = '1'
									)

		SET @LEGAL_SUB_ZIP_CODE=(SELECT TOP 1 RZ.SUB_ZIPCODE
									FROM CONFINS.DBO.REF_ZIPCODE RZ WITH (NOLOCK)
									INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT RPD WITH (NOLOCK) ON RPD.REF_PROV_DISTRICT_ID = RZ.REF_PROV_DISTRICT_ID
									INNER JOIN (
										SELECT PRV.NAME AS PROV_NAME
											,kota.REF_PROV_DISTRICT_ID AS KOTA_ID
											,kota.NAME AS KOTA_NAME
										FROM CONFINS.DBO.REF_PROV_DISTRICT PRV WITH (NOLOCK)
										INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT KOTA WITH (NOLOCK) ON PRV.REF_PROV_DISTRICT_ID = KOTA.PARENT_ID
										WHERE PRV.TYPE = 'PRV'
											AND KOTA.TYPE = 'DIS'
											AND KOTA.IS_ACTIVE = '1'
											AND PRV.IS_ACTIVE = '1'
										) N ON N.KOTA_ID = RZ.REF_PROV_DISTRICT_ID
									WHERE RZ.KELURAHAN = @VILLAGE
										AND RZ.KECAMATAN = @SUB_DISTRICT
										AND RZ.CITY = @CITY
										AND RZ.ZIPCODE = @CITY_ID
										AND RZ.IS_ACTIVE = '1'
										AND RPD.IS_ACTIVE = '1'
									)

 
		BEGIN
			INSERT INTO WISE_STAGING.DBO.T_MKT_MARKETPLACE_ACQ_REQ
			(ACQ_ID, ORDER_ID ,PARTNER_ID ,ID_NO ,FULL_NAME ,BIRTH_PLACE ,BIRTH_DT ,SURVEY_ADDR ,SURVEY_RT ,SURVEY_RW ,SURVEY_PROVINCE ,SURVEY_CITY 
			,SURVEY_SUB_DISTRICT ,SURVEY_VILLAGE ,SURVEY_CITY_ID ,ADDR ,RT ,RW ,PROVINCE ,CITY ,SUB_DISTRICT ,VILLAGE ,CITY_ID ,PHONE_NUMBER 
			,MOTHER_MAIDEN_NAME ,PRODUCT_TYPE_DESC ,SOA ,SURVEY_SUB_ZIP_CODE ,SOURCE_DATA ,TRANSACTION_ID ,ID_STATUS 
			,DTM_CRT ,USR_CRT
			,ORDER_DT
			,LEGAL_SUB_ZIP_CODE )
			VALUES
			(@ACQ_ID_SEQ, @ORDER_ID ,@PARTNER_ID ,@ID_NO ,@FULL_NAME ,@BIRTH_PLACE ,@BIRTH_DT ,@SURVEY_ADDR ,@SURVEY_RT ,@SURVEY_RW ,@SURVEY_PROVINCE ,@SURVEY_CITY 
			,@SURVEY_SUB_DISTRICT ,@SURVEY_VILLAGE ,@SURVEY_CITY_ID ,@ADDR ,@RT ,@RW ,@PROVINCE ,@CITY ,@SUB_DISTRICT ,@VILLAGE ,@CITY_ID ,@PHONE_NUMBER 
			,@MOTHER_MAIDEN_NAME ,@PRODUCT_TYPE_DESC ,@SOA ,@SURVEY_SUB_ZIP_CODE ,@SOURCE_DATA ,@TRANSACTION_ID ,@ID_STATUS 
			,@CURRENT_DATE ,@SOURCE_USER
			,GETDATE()
			,@LEGAL_SUB_ZIP_CODE )
		END

	   -- Update Status Seq ke Master
			--IF @RESP_CODE = '00'
			--BEGIN
			--UPDATE MST
			--	SET SEQ_NEXT = @SEQ_NEXT+1
			--	FROM WISE_STAGING.DBO.M_MKT_MARKETPLACE_PARTNER MST
			--	WHERE ID_MARKETPLACE = @PARTNER_ID
			--END
	 END
 

	IF (@SOURCE_DATA = 'Main_Dealer' AND @RESP_CODE = '00')
	BEGIN 

		/*FLAG MASTER = 2 di letakan setelah insert ACQ_REQ agar pada saat insert ACQ_REQ value nya tidak berubah*/
		IF @FLAG_MASTER=2
		BEGIN			 
			IF @RESP_CODE = '00'
			BEGIN  
				SELECT
				 (SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @SURVEY_PROVINCE     AND FIELD_MAPPING='PROVINCE'    ) as SURVEY_PROVINCE    
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @SURVEY_CITY         AND FIELD_MAPPING='CITY'		  )	as SURVEY_CITY        
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @SURVEY_SUB_DISTRICT AND FIELD_MAPPING='SUB_DISTRICT')	as SURVEY_SUB_DISTRICT
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @SURVEY_VILLAGE      AND FIELD_MAPPING='VILLAGE'	  )	as SURVEY_VILLAGE     
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @SURVEY_CITY_ID      AND FIELD_MAPPING='ZIPCODE'	  )	as SURVEY_CITY_ID     
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @PROVINCE            AND FIELD_MAPPING='PROVINCE'	  )	as PROVINCE           
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @CITY                AND FIELD_MAPPING='CITY'		  )	as CITY               
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @SUB_DISTRICT        AND FIELD_MAPPING='SUB_DISTRICT')	as SUB_DISTRICT       
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @VILLAGE             AND FIELD_MAPPING='VILLAGE'	  )	as VILLAGE            
				,(SELECT  DESCR_WOM FROM M_MKT_MARKETPLACE_MAPPING_CODE WHERE PARTNER_ID=@PARTNER_ID AND DESCR_PARTNER=  @CITY_ID             AND FIELD_MAPPING='ZIPCODE'	  )	as CITY_ID            
				INTO #DATA_FLAG_MASTER2

				SELECT @SURVEY_PROVINCE     = SURVEY_PROVINCE     
					   ,@SURVEY_CITY         = SURVEY_CITY         
					   ,@SURVEY_SUB_DISTRICT = SURVEY_SUB_DISTRICT 
					   ,@SURVEY_VILLAGE      = SURVEY_VILLAGE      
					   ,@SURVEY_CITY_ID      = SURVEY_CITY_ID      
					   ,@PROVINCE            = PROVINCE            
					   ,@CITY                = CITY                
					   ,@SUB_DISTRICT        = SUB_DISTRICT        
					   ,@VILLAGE             = VILLAGE             
					   ,@CITY_ID             = CITY_ID          
				FROM #DATA_FLAG_MASTER2

				   SET @SURVEY_SUB_ZIP_CODE=(SELECT TOP 1 RZ.SUB_ZIPCODE
												FROM CONFINS.DBO.REF_ZIPCODE RZ WITH (NOLOCK)
												INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT RPD WITH (NOLOCK) ON RPD.REF_PROV_DISTRICT_ID = RZ.REF_PROV_DISTRICT_ID
												INNER JOIN (
													SELECT PRV.NAME AS PROV_NAME
														,kota.REF_PROV_DISTRICT_ID AS KOTA_ID
														,kota.NAME AS KOTA_NAME
													FROM CONFINS.DBO.REF_PROV_DISTRICT PRV WITH (NOLOCK)
													INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT KOTA WITH (NOLOCK) ON PRV.REF_PROV_DISTRICT_ID = KOTA.PARENT_ID
													WHERE PRV.TYPE = 'PRV'
														AND KOTA.TYPE = 'DIS'
														AND KOTA.IS_ACTIVE = '1'
														AND PRV.IS_ACTIVE = '1'
													) N ON N.KOTA_ID = RZ.REF_PROV_DISTRICT_ID
												WHERE RZ.KELURAHAN = @SURVEY_VILLAGE
													AND RZ.KECAMATAN = @SURVEY_SUB_DISTRICT
													AND RZ.CITY = @SURVEY_CITY
													AND RZ.ZIPCODE = @SURVEY_CITY_ID
													AND RZ.IS_ACTIVE = '1'
													AND RPD.IS_ACTIVE = '1')


					SET @LEGAL_SUB_ZIP_CODE=(SELECT TOP 1 RZ.SUB_ZIPCODE
									FROM CONFINS.DBO.REF_ZIPCODE RZ WITH (NOLOCK)
									INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT RPD WITH (NOLOCK) ON RPD.REF_PROV_DISTRICT_ID = RZ.REF_PROV_DISTRICT_ID
									INNER JOIN (
										SELECT PRV.NAME AS PROV_NAME
											,kota.REF_PROV_DISTRICT_ID AS KOTA_ID
											,kota.NAME AS KOTA_NAME
										FROM CONFINS.DBO.REF_PROV_DISTRICT PRV WITH (NOLOCK)
										INNER JOIN CONFINS.DBO.REF_PROV_DISTRICT KOTA WITH (NOLOCK) ON PRV.REF_PROV_DISTRICT_ID = KOTA.PARENT_ID
										WHERE PRV.TYPE = 'PRV'
											AND KOTA.TYPE = 'DIS'
											AND KOTA.IS_ACTIVE = '1'
											AND PRV.IS_ACTIVE = '1'
										) N ON N.KOTA_ID = RZ.REF_PROV_DISTRICT_ID
									WHERE RZ.KELURAHAN = @VILLAGE
										AND RZ.KECAMATAN = @SUB_DISTRICT
										AND RZ.CITY = @CITY
										AND RZ.ZIPCODE = @CITY_ID
										AND RZ.IS_ACTIVE = '1'
										AND RPD.IS_ACTIVE = '1'
									)
	
			END
 
		END	
 
		BEGIN
			DECLARE
			@i2_ID_STATUS VARCHAR(20),
			@i2_SEQUENCE  INT
        
			SET @i2_ID_STATUS = '1' -- Default '1 = Received'
			SET @i2_SEQUENCE  = '1' -- Default '1'
        
			INSERT INTO WISE_STAGING.DBO.T_MKT_MARKETPLACE_STATUS 
			(ORDER_ID, TRANSACTION_ID, PARTNER_ID, SEQUENCE, ID_STATUS, STATUS_DT, DTM_CRT, USR_CRT, DTM_UPD, USR_UPD)
			VALUES
			(@ORDER_ID, @TRANSACTION_ID, @PARTNER_ID, @i2_SEQUENCE, @i2_ID_STATUS, GETDATE(), GETDATE(), @SOURCE_USER, NULL, NULL)
		END
 
		/*
		BEGIN
			EXEC WISE_STAGING.DBO.[spMKT_MAINDEALER_INS_ACQUISITION]
			@ORDER_ID ,@PARTNER_ID ,@ID_NO ,@FULL_NAME ,@BIRTH_PLACE ,@BIRTH_DT ,@SURVEY_ADDR ,@SURVEY_RT ,@SURVEY_RW ,@SURVEY_PROVINCE ,@SURVEY_CITY 
			,@SURVEY_SUB_DISTRICT ,@SURVEY_VILLAGE ,@SURVEY_CITY_ID ,@ADDR ,@RT ,@RW ,@PROVINCE ,@CITY ,@SUB_DISTRICT ,@VILLAGE ,@CITY_ID ,@PHONE_NUMBER 
			,@MOTHER_MAIDEN_NAME ,@PRODUCT_TYPE_DESC ,@SOA ,@SURVEY_SUB_ZIP_CODE ,@SOURCE_DATA ,@TRANSACTION_ID ,@ID_STATUS 
			,@CURRENT_DATE ,@SOURCE_USER 
		END
		*/

		BEGIN
			INSERT INTO WISE_STAGING.DBO.T_MKT_MARKETPLACE_ACQ 
			(ACQ_ID,ORDER_ID ,PARTNER_ID ,ID_NO ,FULL_NAME ,BIRTH_PLACE ,BIRTH_DT ,SURVEY_ADDR ,SURVEY_RT ,SURVEY_RW ,SURVEY_PROVINCE ,SURVEY_CITY 
			,SURVEY_SUB_DISTRICT ,SURVEY_VILLAGE ,SURVEY_CITY_ID ,ADDR ,RT ,RW ,PROVINCE ,CITY ,SUB_DISTRICT ,VILLAGE ,CITY_ID ,PHONE_NUMBER 
			,MOTHER_MAIDEN_NAME ,PRODUCT_TYPE_DESC ,SOA ,SURVEY_SUB_ZIP_CODE ,SOURCE_DATA ,TRANSACTION_ID ,ID_STATUS 
			,DTM_CRT ,USR_CRT
			,ORDER_DT
			,LEGAL_SUB_ZIP_CODE)
			VALUES
			(@ACQ_ID_SEQ, @ORDER_ID ,@PARTNER_ID ,@ID_NO ,@FULL_NAME ,@BIRTH_PLACE ,@BIRTH_DT ,@SURVEY_ADDR ,@SURVEY_RT ,@SURVEY_RW ,@SURVEY_PROVINCE ,@SURVEY_CITY 
			,@SURVEY_SUB_DISTRICT ,@SURVEY_VILLAGE ,@SURVEY_CITY_ID ,@ADDR ,@RT ,@RW ,@PROVINCE ,@CITY ,@SUB_DISTRICT ,@VILLAGE ,@CITY_ID ,@PHONE_NUMBER 
			,@MOTHER_MAIDEN_NAME ,@PRODUCT_TYPE_DESC ,@SOA ,@SURVEY_SUB_ZIP_CODE ,@SOURCE_DATA ,@TRANSACTION_ID ,@ID_STATUS 
			,@CURRENT_DATE ,@SOURCE_USER
			,GETDATE()
			,@LEGAL_SUB_ZIP_CODE)
		END 

 
	END

  -- Output Response
  SELECT @poRESP_CODE = @RESP_CODE, @poRESP_DESC = @RESP_DESC, @poRESP_TRANSACTION_ID = @TRANSACTION_ID

  INSERT INTO WISE_STAGING.DBO.LOG_JOB_MARKETPLACE (PROC_NAME, DATE_PROCESSED, ERR_MESSAGE, ERR_LINE, ERR_NUMBER)
  VALUES ('spMKT_MAINDEALER_INS_ACQUISITION_ORI', GETDATE(), 'END', NULL, NULL)

END TRY

BEGIN CATCH
  DECLARE
	@ERRMSG	     NVARCHAR(MAX),
    @ERRSEVERITY INT,
	@ERRSTATE	 INT,
	@LINE INT

	SELECT @ERRMSG      = ERROR_MESSAGE(),
		   @ERRSEVERITY = ERROR_SEVERITY(),
	 	   @ERRSTATE    = ERROR_STATE(),
		   @LINE		= ERROR_LINE()

    SET @RESP_CODE = '30'   
 
	SELECT @RESP_DESC = RESPONSE_MESSAGE
	  FROM WISE_STAGING.DBO.M_MKT_MAINDEALER_RESPONSECODE
     WHERE  RESPONSE_CODE = @RESP_CODE

	SELECT @poRESP_CODE = @RESP_CODE, @poRESP_DESC = @RESP_DESC, @poRESP_TRANSACTION_ID = NULL
	
	BEGIN
	  UPDATE REQ
	     SET REQ.RESPONSE_CODE  = @RESP_CODE,
		     REQ.MESSAGE        = @RESP_DESC,
			 REQ.DTM_RESPONSE   = GETDATE(),
			 REQ.TRANSACTION_ID = NULL
		FROM WISE_STAGING.DBO.T_MKT_MARKETPLACE_ACQ_REQ REQ
	   WHERE REQ.PARTNER_ID = @PARTNER_ID
	     AND REQ.ORDER_ID   = @ORDER_ID
		 AND REQ.TRANSACTION_ID = @TRANSACTION_ID
	  
	  DELETE WISE_STAGING.DBO.T_MKT_MARKETPLACE_ACQ
	   WHERE PARTNER_ID = @PARTNER_ID
	     AND ORDER_ID   = @ORDER_ID
		 AND TRANSACTION_ID = @TRANSACTION_ID
	END
	
	INSERT INTO WISE_STAGING.DBO.LOG_JOB_MARKETPLACE (PROC_NAME, DATE_PROCESSED, ERR_MESSAGE, ERR_LINE, ERR_NUMBER)
    VALUES ('spMKT_MAINDEALER_INS_ACQUISITION_ORI', GETDATE(), 'ERROR : '+@ERRMSG+', '+@Debug+', Line : '+CAST(@LINE as VARCHAR(10)), NULL, NULL)
	 

END CATCH